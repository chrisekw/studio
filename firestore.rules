
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isSuperAdmin() {
      return request.auth.token.email == 'ekwchristian@gmail.com';
    }

    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId || isAdmin();
      allow update: if (request.auth.uid == userId &&
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['defaultIncludeAddress', 'defaultIncludeLinkedIn', 'leadsGeneratedToday', 'lastLeadGenerationDate', 'leadsGeneratedThisMonth', 'lastLeadGenerationMonth', 'monthlyLeadsGenerated', 'addonCredits', 'leadPoints']))
                    || 
                    (isSuperAdmin() && request.resource.data.diff(resource.data).affectedKeys()
                         .hasAny(['plan', 'isSalesMember', 'leadsGeneratedThisMonth', 'lastLeadGenerationMonth']));
      
      allow delete: if isSuperAdmin();

      match /savedLeads/{leadId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Rules for the new 'events' collection
    match /events/{eventId} {
      // Any authenticated user can create an event (log their action)
      allow create: if request.auth.uid != null;
      
      // Only admins can read the full event log
      allow read: if isAdmin();
      
      // No one can update or delete events to ensure log integrity
      allow update, delete: if false;
    }
  }
}
